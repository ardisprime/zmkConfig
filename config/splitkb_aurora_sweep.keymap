/*
* Copyright (c) 2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

///// MACROS /////

// increase sticky keys release
&sk {
  release-after-ms = <5000>;
};

/ {

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp Q &kp W &kp E &kp R &kp T                  &kp Y      &kp U &kp I &kp O     &kp P
        &kp A &kp S &kp D &kp F &kp G                  &kp TAB    &kp H &kp J &kp K     &kp L
        &kp Z &kp X &kp C &kp V &kp B                  &kp RET    &kp N &kp M &kp COMMA &kp DOT
                          &to 1 &kp BSPC               &kp SPACE  &to 2
      >;
    };

    low_layer {
      bindings = <
        &kp N1 &kp N2 &kp N3 &kp RBKT &kp RA(Q)         &kp CARET &kp STAR  &kp LPAR &kp LT   &kp GT
        &kp N4 &kp N5 &kp N6 &kp FSLH &kp RA(E)         &kp BSLH  &sk LSHFT &sk LALT &sk LGUI &sk LCTRL
        &kp N7 &kp N8 &kp N9 &kp N0   &kp DLLR          &kp PRCNT &kt LSHFT &kt LALT &kt LGUI &kt LCTRL
                             &to 3    &trans            &trans    &to 0
      >;
    };

    high_layer {
      bindings = <
        &kp RBRC        &kp RA(NON_US_BSLH) &kp QMARK &kp RPAR      &kp SQT          &kp EXCL   &kp RA(N8)   &kp RA(N9) &kp RA(7) &kp RA(0)
        &kp NON_US_BSLH &kp PIPE2           &kp AMPS  &kp RA(MINUS) &kp LBKT         &kp MINUS  &kp LEFT     &kp DOWN   &kp UP    &kp RIGHT
        &none           &kp RA(RBKT)        &kp ESC   &kp DEL       &kp SEMI         &kp UNDER  &kp LS(BSLH) &kp AT     &kp PG_DN &kp PG_UP
                                                      &to 0         &trans           &trans     &to 3
      >;
    };

    switching_layer {
      bindings = <
        &kp F1 &kp F2  &kp F3  &kp F4  &none          &none &kp EQUAL &kp PLUS &none &none
        &kp F5 &kp F6  &kp F7  &kp F8  &none          &none &to 1     &to 0    &to 2 &none
        &kp F9 &kp F10 &kp F11 &kp F12 &none          &none &none     &none    &none &none 
                               &none   &trans         &trans     &none
      >;
    };

///// DEFAULT LAYOUT /////

//    default_layer {
//      bindings = <
//        &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U  &kp I    &kp O   &kp P
//        &kp A &kp S &kp D &kp F &kp G                               &kp H &kp J &kp K &kp L &kp SQT
//        &mt LSHFT Z &kp X &kp C &kp V &kp B                      &kp N &kp M  &kp COMMA &kp DOT &mt LSHFT RET
//        &mo 1 &kp LCTRL                  &kp SPACE &mo 2
//      >;
//    };
//
//    left_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
//        &kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH         &kp MINUS &kp EQUAL  &kp LBKT &kp RBKT  &kp DEL
//        &kp ESC    &kp TILDE    &kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2     &kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL
//        &mo 1  &kp LGUI                     &kp RGUI &mo 2
//      >;
//    };
//
//    right_layer {
//      bindings = <
//        &kp EXCL  &kp AT &kp HASH  &kp DLLR  &kp PRCNT             &kp CARET  &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR
//        &kp HASH  &kp QMARK  &kp FSLH  &kp COLON  &kp SEMI           &kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BSPC
//        &kp LSHFT  &kp KP_PLUS &kp LBKT &kp RBKT   &kp BSLH             &kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
//        &mo 3 &kp LCTRL                &kp SPACE  &mo 2
//      >;
//    };
//
//    tri_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5             &trans &trans   &trans   &trans  &trans
//        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans
//        &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7                 &trans &kp PG_DN  &kp K_VOL_DN  &trans &trans
//        &trans &trans                      &trans &trans
//      >;
//    };

  };
};

