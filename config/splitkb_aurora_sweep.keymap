/*
* Copyright (c) 2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

///// MACROS /////

// increase sticky keys release
&sk {
  release-after-ms = <5000>;
};

/ {

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp Q &kp W &kp E &kp R &kp T                  &kp Y      &kp U   &kp I &kp O     &kp P
        &kp A &kp S &kp D &kp F &kp G                  &kp TAB    &kp H   &kp J &kp K     &kp L
        &kp Z &kp X &kp C &kp V &kp B                  &kp ESC    &kp N   &kp M &kp COMMA &kp DOT
                          &mo 5 &kp SPACE              &kp BSPC   &kp RET
      >;
    };

    first_layer {
      bindings = <
        &none  &kp RBKT &kp FSLH &kp RBRC &none              &none    &kp AMPS &kp RA(MINUS) &kp RA(NON_US_BSLH) &none 
        &kp N1 &kp N2   &kp N3   &kp N4   &kp N5             &kp N6   &kp N7   &kp N8        &kp N9              &kp N0
        &none  &kp RPAR &kp STAR &kp LPAR &none              &none    &kp LT   &kp GT        &kp QMARK           &none
                                 &mo 5    &kp SPACE          &kp BSPC &kp DEL
      >;
    };

    second_layer {
      bindings = <
        &none      &none      &kp RA(RBKT) &none      &none              &none     &kp EQUAL         &kp PLUS  &kp GRAVE &none 
        &kp RA(N8) &kp RA(N9) &kp RA(N7)   &kp RA(N0) &kp EXCL           &kp UNDER &kp LEFT          &kp DOWN  &kp UP    &kp RIGHT
        &none      &none      &kp LS(BSLH) &kp AT     &none              &none     &kp NON_US_BSLH   &kp PIPE2 &none     &none
                                           &mo 5      &kp SPACE          &kp BSPC  &none
      >;
    };

    third_layer {
      bindings = <
        &none     &kp SQT   &kp LBKT  &kp SEMI  &none              &none     &none     &none    &none    &none 
        &kp CARET &kp BSLH  &kp DLLR  &kp RA(Q) &kp RA(E)          &kp PRCNT &sk LSHFT &sk LALT &sk LGUI &sk LCTRL
        &none     &kp MINUS &kp PG_DN &kp PG_UP &none              &none     &kt LSHFT &kt LALT &kt LGUI &kt LCTRL
                                      &mo 5     &kp SPACE          &kp BSPC  &none
      >;
    };

    fourth_layer {
      bindings = <
        &none  &none  &none   &none  &none              &none  &none  &none   &none  &none 
        &kp F1 &kp F2 &kp F3  &kp F4 &kp F5             &kp F6 &kp F7 &kp F8  &kp F9 &kp F10
        &none  &none  &kp F11 &none  &none              &none  &none  &kp F12 &none  &none 
                              &mo 5  &kp SPACE          &kp BSPC  &none
      >;
    };

    fifth_layer {
      bindings = <
        &none  &none  &none &none  &none          &none  &none  &none &none  &none 
        &none  &none  &none &none  &none          &none  &to 0  &to 1 &to 2  &to 3 
        &none  &none  &none &none  &none          &none  &to 4  &none &none  &none 
                            &mo 5  &none          &none  &none
      >;
    };

///// DEFAULT LAYOUT /////

//    default_layer {
//      bindings = <
//        &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U  &kp I    &kp O   &kp P
//        &kp A &kp S &kp D &kp F &kp G                               &kp H &kp J &kp K &kp L &kp SQT
//        &mt LSHFT Z &kp X &kp C &kp V &kp B                      &kp N &kp M  &kp COMMA &kp DOT &mt LSHFT RET
//        &mo 1 &kp LCTRL                  &kp SPACE &mo 2
//      >;
//    };
//
//    left_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
//        &kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH         &kp MINUS &kp EQUAL  &kp LBKT &kp RBKT  &kp DEL
//        &kp ESC    &kp TILDE    &kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2     &kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL
//        &mo 1  &kp LGUI                     &kp RGUI &mo 2
//      >;
//    };
//
//    right_layer {
//      bindings = <
//        &kp EXCL  &kp AT &kp HASH  &kp DLLR  &kp PRCNT             &kp CARET  &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR
//        &kp HASH  &kp QMARK  &kp FSLH  &kp COLON  &kp SEMI           &kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BSPC
//        &kp LSHFT  &kp KP_PLUS &kp LBKT &kp RBKT   &kp BSLH             &kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
//        &mo 3 &kp LCTRL                &kp SPACE  &mo 2
//      >;
//    };
//
//    tri_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5             &trans &trans   &trans   &trans  &trans
//        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans
//        &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7                 &trans &kp PG_DN  &kp K_VOL_DN  &trans &trans
//        &trans &trans                      &trans &trans
//      >;
//    };

  };
};

