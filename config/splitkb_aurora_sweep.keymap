/*
* Copyright (c) 2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

  conditional_layers {
    compatible = "zmk,conditional-layers";
    special {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    letter_layer {
      bindings = <
        &kp Q       &kp W &kp E &kp R &kp T             &kp Z     &kp U &kp I     &kp O   &kp P
        HMRWL(A,    S,    D,    F)    &kp G             HMRWR(A,  S,    D,        F)      &kp LBKT
        &kp Y       &kp X &kp C &kp V &kp B             &kp N     &kp M &kp SEMI  &kp SQT &kp MINUS
                                &mo 1 &kp SPACE         &kp DEL   &mo 2
      >;
    };

    number_layer {
      bindings = <
        &kp N1      &kp N2       &kp N3        &kp N4    &kp N5                      &kp N6       &kp N7    &kp N8    &kp N9     &kp N0
        HMRWL(RBKT, AMPS,        RBRC,         FSLH)     &kp RA(NON_US_BSLH)         HMRWR(COMMA, DOT,      LT,       GT)        &kp DLLR
        &none       &kp RA(RBKT) &kp RA(MINUS) &kp UNDER &kp EXCL                    &kp BSLH     &kp QMARK &kp RPAR  &kp RCARET &none
                                               &trans    &none                       &none        &trans
      >;
    };

    symbol_layer {
      bindings = <
        &none           &none &kp RA(E)       &kp RA(Q) &kp ESC         &kp LEFT    &kp DOWN  &kp UP   &kp RIGHT &none
        HMRWL(LS(BSLH), AT,   RA(7),          RA(0) )   &kp DEL         HMRWR(STAR, LPAR,     RA(8),   RA(9) )   &none
        &none           &none &kp NON_US_BSLH &kp PIPE2 &kp TAB         &kp RET     &kp EQUAL &kp PLUS &kp PRCNT &none
                                              &trans    &none           &none       &trans
      >;
    };

    special_layer {
      bindings = <
        &none     &none &none &kp C_BRI_DEC &kp C_BRI_INC         &kp C_MuTE &kp C_VOL_DN  &kp C_VOL_UP   &none &none
        HMRWL(F1, F2,   F3,   F4)           &kp F5                HMRWR(F6,  F7,           F8,            F9)   &kp F10
        &none     &none &none &none         &kp F11               &kp F12    &none         &none          &none &none
                              &trans        &none                 &none      &trans
      >;
    };

///// DEFAULT LAYOUT /////

//    default_layer {
//      bindings = <
//        &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U  &kp I    &kp O   &kp P
//        &kp A &kp S &kp D &kp F &kp G                               &kp H &kp J &kp K &kp L &kp SQT
//        &mt LSHFT Z &kp X &kp C &kp V &kp B                      &kp N &kp M  &kp COMMA &kp DOT &mt LSHFT RET
//        &mo 1 &kp LCTRL                  &kp SPACE &mo 2
//      >;
//    };
//
//    left_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
//        &kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH         &kp MINUS &kp EQUAL  &kp LBKT &kp RBKT  &kp DEL
//        &kp ESC    &kp TILDE    &kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2     &kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL
//        &mo 1  &kp LGUI                     &kp RGUI &mo 2
//      >;
//    };
//
//    right_layer {
//      bindings = <
//        &kp EXCL  &kp AT &kp HASH  &kp DLLR  &kp PRCNT             &kp CARET  &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR
//        &kp HASH  &kp QMARK  &kp FSLH  &kp COLON  &kp SEMI           &kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BSPC
//        &kp LSHFT  &kp KP_PLUS &kp LBKT &kp RBKT   &kp BSLH             &kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
//        &mo 3 &kp LCTRL                &kp SPACE  &mo 2
//      >;
//    };
//
//    tri_layer {
//      bindings = <
//        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5             &trans &trans   &trans   &trans  &trans
//        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans
//        &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7                 &trans &kp PG_DN  &kp K_VOL_DN  &trans &trans
//        &trans &trans                      &trans &trans
//      >;
//    };

  };
};

